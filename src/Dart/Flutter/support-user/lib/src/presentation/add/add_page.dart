import 'package:support_user/src/application/add.dart';
import 'package:support_user/src/data/add/strings.dart';
import 'package:support_user/src/data/shared/list.dart';
import 'add_page_controller.dart';

import 'dart:io';
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:flutter_file_downloader/flutter_file_downloader.dart';
import 'package:get/get.dart';

class MultipleFilePickerScreen extends StatefulWidget {
  const MultipleFilePickerScreen({super.key});

  @override
  State<MultipleFilePickerScreen> createState() =>
      _MultipleFilePickerScreenState();
}

class _MultipleFilePickerScreenState extends State<MultipleFilePickerScreen> {
  getMultipleFile() async {
    FilePickerResult? result = await FilePicker.platform.pickFiles(
      allowMultiple: true,
    );

    if (result != null) {
      List<File?> file = result.paths.map((path) => File(path!)).toList();
      files = file;
      setState(() {});
    } else {
      ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
        content: Text('Please select atleast 1 file'),
      ));
    }
  }
  List<File?> files = [];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
        body: Column(
          children: [
            SizedBox(
              height: MediaQuery.of(context).size.height/2,
              child: ListView.builder(
                itemCount: files.length,
                itemBuilder: (BuildContext context, int index) {
                  return ListTile(
                    title: Text(files[index]!.path.split("/").last,
                        style: TextStyle(color: Colors.black)),
                  );
                }
              )
            ),
            SizedBox(
              height: MediaQuery.of(context).size.height/2,
              child: FutureBuilder(
                future: loadFiles(),
                builder:(BuildContext context, AsyncSnapshot<Autogenerated> snapshot){
                  if(snapshot.hasData){
                    return ListView.builder(
                      itemCount: snapshot.data!.items!.length,
                      itemBuilder: (BuildContext context, int index) {
                        return ListTile(
                          onTap: () async {
                            final status = await Permission.storage.request();
                            if(status.isGranted){
                              FileDownloader.downloadFile(
                                notificationType: NotificationType.progressOnly,
                                //url: '''https://firebasestorage.googleapis.com/v0/b/support-6cf9e.appspot.com/o/
                                //  ${snapshot.data!.items![index].name!}?alt=media''',
                                url: 'https://www.digikala.com/mag/wp-content/uploads/2020/08/DK-rebranding2.jpg',
                                name: 'attachment'
                              );
                            }
                          },
                          title: Text(snapshot.data!.items![index].name!,
                              style: TextStyle(color: Colors.black)),
                        );
                      }
                    );
                  }else{
                    return Center(
                      child: CircularProgressIndicator()
                    );
                  }
                }
              )
            )
          ]
        ),
        floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
        floatingActionButton: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            FloatingActionButton.extended(
              onPressed: () {
                asyncFileUpload(files.last!);
              },
              label: const Text("Send"),
            ),
            FloatingActionButton.extended(
              onPressed: () {
                getMultipleFile();
              },
              label: const Text("Select File")
            )
          ]
        )
    );
  }
}

class _TemporaryData{
  int selectedSensitivity = 0;
  void changeSensitivity(int index){
    selectedSensitivity = index;
  }
}

class AddPage extends StatelessWidget {
  final AddPageController controller = Get.put(AddPageController());
  File? selectedFile;
  void selectFile(BuildContext context) async {
    FilePickerResult? result = await FilePicker.platform.pickFiles(
      allowMultiple: false
    );
    if (result != null) {
      print(result.files.single.path!);
      File? file = File(result.files.single.path!);
      selectedFile = file;
    } else {
      ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
        content: Text('Please select atleast 1 file'),
      ));
    }
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        titleTextStyle: TextStyle(
          color: Colors.black
        ),
        centerTitle: true,
        title: const Text(AddStrings.registerTicket),
        actions: [IconButton(
          onPressed: (){
            Get.back();
          },
          icon: const Icon(Icons.close, color: Colors.black)
        )],
      ),
      body: Column(
        children: [
          DropdownMenu(
            onSelected: (String? value)=>controller.changeSelectedSensitivities(value!),
            dropdownMenuEntries: SharedLists.sensitivities.map((e) =>
              DropdownMenuEntry(
                value: e,
                label: e
              )
            ).toList()
          ),
          TextField(
            decoration: InputDecoration(
              prefixIcon: IconButton(
                icon: Icon(Icons.attach_file),
                onPressed: (){
                  selectFile(context);
                },
              )
            )
          ),
          ElevatedButton(onPressed: (){}, child: Text(AddStrings.registerTicket))
        ]
      )
    );
  }
}